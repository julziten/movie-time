{"version":3,"sources":["hooks/useFetch.js","helpers/apiKey.js","types/types.js","helpers/replaceImg.js","components/Details.js","components/Item.js","components/Results.js","components/SearchComp.js","hooks/useForm.js","components/MovieTime.js","store/store.js","reducers/favoriteReducer.js","components/Favorites.js","routers/AppRouter.js","MainScreen.js","index.js"],"names":["useFetch","url","useState","data","loading","error","state","setState","isMounted","useRef","useEffect","current","fetch","then","resp","json","apiKey","types","replaceImgWithError","e","target","onerror","src","Details","history","useSelector","id","useParams","isFav","some","item","favorite","toggleFav","dispatch","useDispatch","localStorage","setItem","JSON","stringify","handleFavorite","favMovie","name","title","image","poster_path","overview","popularity","vote","vote_average","date","release_date","language","original_language","type","payload","action","className","onClick","goBack","original_title","alt","onError","disabled","allowHalf","defaultValue","style","marginBottom","HeartOutlined","fontSize","HeartFilled","Item","img","movie","margin","to","width","border","Results","undefined","results","map","Search","Input","SearchComp","initialState","values","setValues","value","useForm","searchTerm","handleInputChange","onSubmit","preventDefault","placeholder","onChange","autoComplete","LoadingOutlined","MovieTime","store","createStore","filter","window","__REDUX_DEVTOOLS_EXTENSION__","Meta","Card","Favorites","hoverable","cover","description","paddingBlock","AppRouter","path","component","exact","MainScreen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEaA,EAAW,SAAEC,GAEtB,MAA0BC,mBAAS,CAAEC,KAAM,KAAMC,SAAS,EAAMC,MAAO,OAAvE,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAYC,kBAAO,GAyBzB,OAvBAC,qBAAU,WACN,OAAO,WACHF,EAAUG,SAAU,KAEzB,IAEHD,qBAAU,WAENH,EAAS,CAAEH,SAAS,EAAMC,MAAO,KAAMF,KAAM,OAE7CS,MAAOX,GACFY,MAAM,SAAAC,GAAI,OAAIA,EAAKC,UACnBF,MAAM,SAAAV,GACKK,EAAUG,SACVJ,EAAS,CACLH,SAAS,EACTC,MAAO,KACPF,cAIrB,CAACF,IAEGK,GC9BEU,EAAS,mC,mCCATC,EACJ,eADIA,EAED,kBCFCC,EAAsB,SAAAC,GAC/BA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOE,IAAM,2D,OCWNC,EAAU,SAAC,GAAmB,IAAhBC,EAAe,EAAfA,QAEjBlB,EAAQmB,aAAa,SAAAnB,GAAK,OAAIA,KAE5BoB,EAAOC,cAAPD,GAEFE,EAAQtB,EAAMuB,MAAM,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,KAE9C,EAA8BxB,mBAAS0B,GAAvC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAEXjC,EAAG,6CAAyCyB,EAAzC,oBAAuDV,GAEhE,EAAsBhB,EAASC,GAAvBE,YAAR,MAAe,GAAf,EAGAO,qBAAU,WACNyB,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,CAAEZ,GAAIA,OACvD,CAACA,IAEJ,IAIMa,EAAiB,WAInB,GAFAP,GAAWD,IAEM,IAAbA,EAAoB,CACpB,IAAMS,EAAW,CACbd,GAAIA,EACJe,KAAMtC,EAAKuC,MACXA,MAAOvC,EAAKuC,MACZC,MAAOxC,EAAKyC,YACZC,SAAU1C,EAAK0C,SACfC,WAAY3C,EAAK2C,WACjBC,KAAM5C,EAAK6C,aACXC,KAAM9C,EAAK+C,aACXC,SAAUhD,EAAKiD,mBAMnBnB,EAJe,CACXoB,KAAMpC,EACNqC,QAASd,QAIV,CACH,IAAMe,EAAS,CACXF,KAAMpC,EACNqC,QAAS,CACL5B,GAAIA,EACJe,KAAMtC,EAAKuC,QAGnBT,EAAUsB,KAMlB,OACI,sBAAKC,UAAU,qBAAf,UAEI,cAAC,IAAD,CACIH,KAAK,UACLI,QA7CS,WACjBjC,EAAQkC,UA0CJ,qBAQa,OAATvD,GAEI,sBAAKqD,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,mCAAMrD,EAAKwD,eAAX,OACA,qBACIC,IAAG,mBAAezD,EAAKuC,MAApB,WACHpB,IAAG,yCAAqCnB,EAAKyC,aAC7CiB,QAAU3C,OAGlB,sBAAKsC,UAAU,gBAAf,UACI,2CAAcrD,EAAK0C,YACnB,6CAAgB1C,EAAK2C,cACrB,cAAC,IAAD,CACIgB,UAAQ,EACRC,WAAS,EACTC,aAAe7D,EAAK6C,aAAe,EACnCiB,MAAO,CAACC,aAAc,SAE1B,+CAAkB/D,EAAK+C,gBACvB,oDAAuB/C,EAAKiD,sBAGX,IAAbrB,EAEI,cAACoC,EAAA,EAAD,CACAF,MAAQ,CAACG,SAAU,QACnBX,QAAUlB,IAEV,cAAC8B,EAAA,EAAD,CACAJ,MAAQ,CAACG,SAAU,QACnBX,QAAUlB,c,gBCjHjC+B,EAAO,SAAC,GAA6B,IAA1B5B,EAAyB,EAAzBA,MAAO6B,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,MAEhC,OACI,sBAAKP,MAAO,CAACQ,OAAQ,OAArB,UACI,mCAAO/B,EAAP,OACA,cAAC,IAAD,CAAMgC,GAAE,mBAAcF,EAAM9C,IAA5B,SACI,qBAAKJ,IAAG,yCAAqCiD,GACzCV,QAAS3C,EACTyD,MAAM,MACNf,IAAG,mBAAelB,EAAf,WACHuB,MAAQ,CAAEW,OAAQ,2BCXzBC,EAAU,SAAC,GAAiB,IAAdL,EAAa,EAAbA,MAEvB,OACI,qBAAKhB,UAAU,qBAAf,SAEkB,OAAVgB,QACkBM,IAAlBN,EAAMO,QAEFP,EAAMO,QAAQC,KAAK,SAAAlD,GACf,OACI,cAAC,EAAD,CACIJ,GAAII,EAAKJ,GACTgB,MAAOZ,EAAKY,MACZ6B,IAAKzC,EAAKc,YACV4B,MAAO1C,GACFA,EAAKJ,OAKtB,0D,iBCdZuD,EAAWC,IAAXD,OAEKE,EAAa,WAEtB,MCXmB,WAA0B,IAAxBC,EAAuB,uDAAR,GACpC,EAA4BlF,mBAASkF,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAaA,MAAO,CAAED,EAPiB,SAAC,GAAgB,IAAdjE,EAAa,EAAbA,OACzBkE,EAAU,2BACHD,GADE,kBAEJjE,EAAOqB,KAAOrB,EAAOmE,UAPhB,WACVD,EAAUF,KDOiCI,CAAQ,CACnDC,WAAY,KADhB,mBAAUA,EAAV,KAAUA,WAAeC,EAAzB,KAIMzF,EAAG,4DAAwDe,EAAxD,kBAAwEyE,GAEjF,EAAsCzF,EAASC,GAA/C,IAAQE,YAAR,MAAe,GAAf,MAAmBC,eAAnB,SAKA,OAEI,qCACI,sBAAMuF,SANO,SAACxE,GAClBA,EAAEyE,kBAKkCpC,UAAU,eAA1C,SAEI,cAACyB,EAAD,CACIxC,KAAK,aACL8C,MAAOE,EACPI,YAAY,oBACZC,SAAUJ,EACVlC,UAAU,gBACVuC,aAAa,WAKL,IAAZ3F,EACA,cAAC4F,EAAA,EAAD,IAEA,cAAC,EAAD,CAASxB,MAAOrE,IAGpB,cAAC,IAAD,CACIuE,GAAG,aACHlB,UAAU,oBAFd,iCE1CCyC,EAAY,WACrB,OACI,sBAAKzC,UAAU,uBAAf,UACI,qDACA,cAAC,EAAD,Q,gBCLC0C,EAAQC,aCDU,WAA2B,IAAzB7F,EAAwB,uDAAhB,GAAIiD,EAAY,uCAErD,OAAQA,EAAOF,MACX,KAAKpC,EACD,MAAM,GAAN,mBAAWX,GAAX,CAAkBiD,EAAOD,UAE7B,KAAKrC,EACD,OAAOX,EAAM8F,QAAO,SAAA5B,GAAK,OAAIA,EAAM9C,KAAO6B,EAAOD,QAAQ5B,MAEzD,QACI,OAAOpB,KDPnB+F,OAAOC,8BAAgCD,OAAOC,gC,QEA1CC,EAASC,IAATD,KAEKE,EAAY,SAAC,GAAe,IAAdjF,EAAa,EAAbA,QAEjBlB,EAAQmB,aAAa,SAAAnB,GAAK,OAAIA,KAMpC,OACI,sBAAKkD,UAAU,uBAAf,UACI,cAAC,IAAD,CACIH,KAAK,UACLY,MAAQ,CAACQ,OAAQ,OACjBhB,QATS,WACjBjC,EAAQkC,UAKJ,qBAOA,qBAAKF,UAAU,iBAAf,SAEQlD,EAAM0E,KAAK,SAAA7E,GAAI,OACX,eAAC,IAAD,CACIuG,WAAS,EACTzC,MAAO,CAAEU,MAAO,IAAKF,OAAQ,OAE7BkC,MAAQ,qBACJ/C,IAAG,mBAAezD,EAAKuC,MAApB,WACHpB,IAAG,yCAAqCnB,EAAKwC,SAC7CkB,QAAU3C,EAPlB,UASI,cAACqF,EAAD,CACI7D,MAAOvC,EAAKwD,eACZiD,YAAazG,EAAK0C,WAEtB,sBAAKoB,MAAO,CAAE4C,aAAc,OAA5B,UACI,6CAAgB1G,EAAK2C,cACrB,+CAAkB3C,EAAK4C,KAAvB,OACA,+CAAkB5C,EAAK8C,QACvB,oDAAuB9C,EAAKgD,iBAd3BhD,EAAKuB,aChBzBoF,EAAY,WACrB,OACI,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOa,KAAK,eAAeC,UAAYzF,IACvC,cAAC,IAAD,CAAOwF,KAAK,aAAaC,UAAYP,IACrC,cAAC,IAAD,CAAOQ,OAAK,EAACF,KAAK,IAAIC,UAAYf,IAClC,cAAC,IAAD,CAAUvB,GAAG,gBClBxBwC,EAAa,WACtB,OACI,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SACI,cAAC,EAAD,OCFZiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8a23496a.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport const useFetch = ( url ) => {\n\n    const [state, setState] = useState({ data: null, loading: true, error: null });\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n    useEffect(() => {\n\n        setState({ loading: true, error: null, data: null });\n        \n        fetch( url )\n            .then( resp => resp.json() )\n            .then( data => { \n                    if (isMounted.current) {\n                        setState({\n                            loading: false,\n                            error: null,\n                            data\n                        })\n                    } \n            })\n    }, [url])\n\n    return state;\n\n}","export const apiKey = '96754526a6a970f6ece3395806273f6a';","export const types = {\n    add: 'add-favorite',\n    remove: 'remove-favorite'\n}","export const replaceImgWithError = e => {\n    e.target.onerror = null;\n    e.target.src = 'https://via.placeholder.com/300x435?text=No+Image+Found';\n};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useFetch } from '../hooks/useFetch';\nimport { apiKey } from '../helpers/apiKey';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button, Rate } from 'antd';\n\nimport { HeartOutlined, HeartFilled } from '@ant-design/icons';\n\nimport { types } from '../types/types';\nimport { replaceImgWithError } from '../helpers/replaceImg';\n\nexport const Details = ( { history } ) => {\n\n    const state = useSelector( state => state );\n\n    const { id } = useParams();\n\n    const isFav = state.some( item => item.id === id );\n\n    const [favorite, toggleFav] = useState(isFav);\n\n    const dispatch = useDispatch();\n\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`;\n\n    const { data = {} } = useFetch(url);\n\n\n    useEffect(() => {\n        localStorage.setItem('favorite', JSON.stringify({ id: id }));\n    }, [id])\n\n    const handleGoBack = () => {\n        history.goBack();\n    }\n\n    const handleFavorite = () => {\n        \n        toggleFav(!favorite);\n\n        if (favorite === false) {\n            const favMovie = {\n                id: id,\n                name: data.title,\n                title: data.title,\n                image: data.poster_path,\n                overview: data.overview,\n                popularity: data.popularity,\n                vote: data.vote_average,\n                date: data.release_date,\n                language: data.original_language\n            }\n            const action = {\n                type: types.add,\n                payload: favMovie\n            }    \n            dispatch( action );\n\n        } else {\n            const action = {\n                type: types.remove,\n                payload: {\n                    id: id,\n                    name: data.title\n                }\n            }\n            dispatch( action );\n        }\n\n    }\n\n\n    return (\n        <div className=\"details__container\">\n\n            <Button\n                type=\"primary\"\n                onClick={ handleGoBack } >\n                Go Back\n            </Button>\n\n            { \n            \n                data !== null && \n\n                    <div className=\"details__card\">\n                        <div className=\"details__image\">\n                            <h2> {data.original_title} </h2>\n                            <img \n                                alt={`This is \"${ data.title }\" movie`} \n                                src={`https://image.tmdb.org/t/p/w500${ data.poster_path }`} \n                                onError={ replaceImgWithError }/>\n                        </div>\n\n                        <div className=\"details__info\">\n                            <p>Overview: {data.overview}</p>\n                            <p>Popularity: {data.popularity}</p>\n                            <Rate \n                                disabled \n                                allowHalf \n                                defaultValue={ data.vote_average / 2 }\n                                style={{marginBottom: '1em'}}    \n                            />\n                            <p>Release Date: {data.release_date}</p>\n                            <p>Original Language: {data.original_language}</p>\n\n                            { \n                                favorite !== true\n                                ? \n                                    <HeartOutlined \n                                    style={ {fontSize: '20px'} }\n                                    onClick={ handleFavorite } /> \n                                :\n                                    <HeartFilled \n                                    style={ {fontSize: '20px'} }\n                                    onClick={ handleFavorite } />\n                            }\n\n                        </div>\n\n                        \n\n                    </div>\n    \n            }\n\n            \n            \n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { replaceImgWithError } from '../helpers/replaceImg';\n\nexport const Item = ( { title, img, movie } ) => {\n\n    return (\n        <div style={{margin: '1em'}}>\n            <h4> { title } </h4>\n            <Link to={`/details/${movie.id}`}>\n                <img src={`https://image.tmdb.org/t/p/w500${ img }`} \n                    onError={replaceImgWithError}\n                    width=\"300\"\n                    alt={`This is \"${ title }\" movie`}\n                    style={ { border: '2px solid black' } }\n                />\n            </Link>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Item } from './Item';\n\nexport const Results = ( { movie } ) => {\n\n    return (\n        <div className=\"results__container\">\n            {\n                movie !== null &&\n                movie.results !== undefined\n                ? (\n                    movie.results.map( item => {\n                        return ( \n                            <Item  \n                                id={item.id} \n                                title={item.title} \n                                img={item.poster_path}\n                                movie={item}\n                                key={item.id}\n                            />\n                        )\n                    }) \n                ) : (\n                    <p>Please search a movie!</p>\n                )\n            }\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetch } from '../hooks/useFetch';\nimport { useForm } from '../hooks/useForm';\nimport { Results } from './Results';\nimport { Input } from 'antd';\nimport { apiKey } from '../helpers/apiKey';\nimport { Link } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Search } = Input;\n\nexport const SearchComp = () => {\n\n    const [ { searchTerm } , handleInputChange ] = useForm({\n        searchTerm: ''\n    });\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}`;\n\n    const { data = {}, loading = true } = useFetch(url);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n    }\n    return (\n\n        <>\n            <form onSubmit={ handleSearch } className=\"search__form\">\n\n                <Search \n                    name=\"searchTerm\" \n                    value={searchTerm} \n                    placeholder=\"Search a movie...\"\n                    onChange={handleInputChange} \n                    className=\"search__input\"\n                    autoComplete=\"off\"\n                />\n            </form>\n\n            {\n                loading === true ? \n                <LoadingOutlined />\n                :\n                <Results movie={data}/>\n            }\n\n            <Link \n                to=\"/favorites\" \n                className=\"search__favorites\">\n                Go To Favorites\n            </Link>\n            \n        </>\n    )\n}\n","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ( {target} ) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [ values, handleInputChange, reset ]\n}","import React from 'react';\n\nimport { SearchComp } from './SearchComp';\n\nexport const MovieTime = () => {\n    return (\n        <div className=\"movietime__container\">\n            <h1>This is movie time!</h1>\n            <SearchComp />\n        </div>\n    )\n}\n","import { createStore } from 'redux';\nimport { favoriteReducer } from '../reducers/favoriteReducer';\n\nexport const store = createStore(\n    favoriteReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { types } from '../types/types';\n\nexport const favoriteReducer = ( state = [], action ) => {\n\n    switch (action.type) {\n        case types.add:\n            return [...state, action.payload ]\n\n        case types.remove:\n            return state.filter(movie => movie.id !== action.payload.id )\n\n            default:\n                return state;\n    }\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Card } from 'antd';\nimport { replaceImgWithError } from '../helpers/replaceImg';\n\nconst { Meta } = Card;\n\nexport const Favorites = ({history}) => {\n\n    const state = useSelector( state => state );\n\n    const handleGoBack = () => {\n        history.goBack();\n    }\n\n    return (\n        <div className=\"favorites__container\">\n            <Button \n                type=\"primary\"\n                style={ {margin: '1em'} }\n                onClick={ handleGoBack } >\n                Go Back\n            </Button>\n\n            <div className=\"favorites__box\">\n                {\n                    state.map( data => (\n                        <Card\n                            hoverable\n                            style={{ width: 300, margin: '1em' }}\n                            key={data.id}\n                            cover={ <img \n                                alt={`This is \"${ data.title }\" movie`} \n                                src={`https://image.tmdb.org/t/p/w500${ data.image }`} /> }\n                                onError={ replaceImgWithError }\n                            >\n                            <Meta \n                                title={data.original_title} \n                                description={data.overview}\n                            />\n                            <div style={{ paddingBlock: '1em' }}>\n                                <p>Popularity: {data.popularity}</p>\n                                <p>Vote Avegare: {data.vote} </p>\n                                <p>Release Date: {data.date}</p>\n                                <p>Original Language: {data.language}</p>\n                            </div>\n\n                        </Card>\n                    ))\n                }\n\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from 'react-router-dom';\nimport { Details } from '../components/Details';\nimport { MovieTime } from '../components/MovieTime';\n\nimport { Provider } from 'react-redux';\nimport { store } from '../store/store';\nimport { Favorites } from '../components/Favorites';\n\nexport const AppRouter = () => {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div>\n                    <Switch>\n                        <Route path=\"/details/:id\" component={ Details } />\n                        <Route path=\"/favorites\" component={ Favorites } />\n                        <Route exact path=\"/\" component={ MovieTime } />\n                        <Redirect to=\"/\"/>\n                    </Switch>\n                </div>\n            </Router>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const MainScreen = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './styles/base.scss';\nimport { MainScreen } from './MainScreen';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainScreen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}